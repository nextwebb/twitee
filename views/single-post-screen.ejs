  <%- include('includes/header') %>
  
  <div class="container py-md-5 container--narrow">

    <%- include('includes/flash') %>

    <div class="d-flex justify-content-between">
      <h2><%= post.title %></h2>
      <% if (post.isVisitorOwner) { %>
        <span class="pt-2">
          <a href="/post/<%= post._id %>/edit" class="text-primary mr-2" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fas fa-edit"></i></a>
          <form class="delete-post-form d-inline" action="/post/<%= post._id %>/delete" method="POST">
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
            <button class="delete-post-button text-danger" data-toggle="tooltip" data-placement="top" title="Delete"><i class="fas fa-trash"></i></button>
          </form>
        </span>
     <% } %>
    </div>
      
    

      <div class="media">
        <img class="d-flex rounded-circle avatar z-depth-1-half mr-3"src="<%= post.author.avatar %>
          alt="Avatar"> 
          <div class="media-body">
              <p class="text-muted small mb-4">
                <a style="text-decoration: none;" href="/profile/<%= post.author.username %>">
                    <h5 class="mt-0 font-weight-bold blue-text" style="display: inline-block; margin-right: 10px;">
                      <%= post.author.username %>
                    </h5>
                    <span class="text-muted small">
                      <%= getTime(post.createdDate) %>
                    </span>
                </a> 
              <%- filterUserHTML(post.body) %>
            </p>
              <div id="like"  v-if="LikeNow">
                <span>
                  <strong> Like </strong>
                  <img src="https://img.icons8.com/cotton/64/000000/like--v1.png" height="40px" width="40px"/>
                  <strong> unlike </strong>
                </span>
            </div>
            <div id="commentBox">
              <form @submit.prevent='addComment'>
                <div style="border-top: 1px solid black;">
                    <div class="media mt-3 shadow-textarea">
                      <!-- // guestId -->
                      <input id="guestId" type="text" hidden value=" <%=user._id %>"> 

                      <div class="media-body">
                        <h5 class="mt-0 font-weight-bold blue-text" style="display: inline-block; margin-right: 10px;"> 
                          @<strong id ="guestUsername" style="margin-right: 10px;"><%= user.username %></strong>
                        </h5> 
                        <div class="form-group basic-textarea rounded-corners">
                          <textarea id="textArea" class="form-control z-depth-1" id="exampleFormControlTextarea345" rows="3" v-model="textArea">
                          </textarea>
                        </div>
                        <button  style="float: right; clear: both;" class=" btn btn-primary">Submit
                        </button>
                        
                      </div>
                      
                    </div>
                  </div>
                 
              </form>
                  <div id="allCommentBox">
                    
                    <div class="media mt-3 shadow-textarea" v-for="(comment, index) in comments" v-bind:key="comment._id" >
                      <div class="media-body">
                        <h5 class="mt-0 font-weight-bold blue-text" style="display: inline-block; margin-right: 10px;"> 
                          <strong style="margin-right: 10px;"> {{ comment.username}} </strong> 
                          <span class="text-muted small">
                           {{comment.createdDate}}
                          </span>
                        </h5> 
                        <div class="form-group basic-textarea rounded-corners">
                          {{comment.comment}}
                        </div>
                      </div>
                    </div>
                </div>
            </div>
          </div>
        </div>
      </div>

  </div>
  
  <%- include('includes/footer') %>

  <script>
    const app = new Vue({
              el: '#commentBox',
              data: {
                comments: [],
                guestId: null,
                postId: null,
                textArea: null,
                commentArea: null,
                profilelink: [],
                guestUsername:null,
                guestComment:null,
                insertedCommentId: null,
              },
               created () {
                this.getComments()
              },
          
              methods:{
               async addComment() {

                 if( !this.textArea){
                  return;
                 } 

                this.commentArea = {
                  guestComment: this.textArea.trim(),
                  guestId: this.guestId.trim(),
                  postId: this.postId.trim()
                }

                await fetch(`/api/v1/comments/add`,
                        {
                          method: 'POST',
                          headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json' 
                          },
                          credentials: 'include',
                          body: JSON.stringify(this.commentArea)
                        }).then((response)=>{
                          return response.json();
                        }).then((success) => {
                          this.insertedCommentId = success.data.id
                          this.guestUsername = document.querySelector('#guestUsername').innerText
                          this.newComment()
                          this.comments.unshift(this.guestComment);
                          this.textArea = null
                          this.feedback = null
                          }).catch(err => console.log(err) )
                    },

                      async getComments() {
                        const pathArray = window.location.pathname.split('/');
                        this.postId = pathArray[2]
                        this.guestId = document.querySelector('#guestId').value.trim(),
                        await fetch(`/api/v1/comments/all/${this.postId}`)
                        .then(res => res.json())
                        .then((docs) => {
                          const {data} = docs;
                          data.map((comment) => {
                            this.comments.push(comment);
                          })
                        })
                      },

                    newComment() {
                      this.guestComment = {
                        comment: this.textArea.trim(),
                        createdDate: moment(new Date()).format('LLL'),
                        username: this.guestUsername.trim(),
                        _id: this.insertedCommentId
                      }
                      return this.guestComment
                    }

           }
    })
  </script>